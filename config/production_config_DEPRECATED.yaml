# Production RAG System Configuration
# Complete configuration for all advanced features

# System Settings
system:
  name: "Production RAG System"
  version: "2.0.0"
  environment: "production"
  log_level: "INFO"

# Model Configuration
models:
  embedding:
    model_name: "all-MiniLM-L6-v2"
    dimension: 384
    batch_size: 32
    device: "cpu"  # or "cuda" for GPU
  
  reranker:
    model_name: "cross-encoder/ms-marco-MiniLM-L-6-v2"
    batch_size: 16
    max_length: 512
  
  llm:
    model_name: "gemma:2b"  # or "gpt-3.5-turbo", "claude-3-haiku"
    temperature: 0.7
    max_tokens: 500
    top_p: 0.9
    frequency_penalty: 0.0
    presence_penalty: 0.0

# Query Optimization
query_optimization:
  enabled: true
  
  semantic_analysis:
    enable_ner: true
    enable_intent_classification: true
    enable_sentiment_analysis: false
    spacy_model: "en_core_web_sm"
  
  query_rewriting:
    enable_synonym_expansion: true
    enable_hyde: true
    enable_decomposition: true
    complexity_threshold: 0.7  # Decompose if complexity > threshold
  
  intent_labels:
    - "definition"
    - "explanation"
    - "comparison"
    - "procedure"
    - "causation"
    - "example"
    - "evaluation"
    - "factual"
    - "opinion"
    - "recommendation"

# Retrieval Configuration
retrieval:
  method: "adaptive"  # Options: adaptive, hybrid, dense, sparse
  
  hybrid_weights:
    sparse: 0.3
    dense: 0.5
    keyword: 0.2
  
  parameters:
    top_k: 10
    use_reranking: true
    use_mmr: true
    mmr_lambda: 0.5
    similarity_threshold: 0.5
  
  cache:
    enabled: true
    max_size: 1000
    ttl_seconds: 3600

# Knowledge Graph
knowledge_graph:
  enabled: true
  
  extraction:
    max_entities_per_doc: 50
    max_relations_per_doc: 100
    entity_types:
      - "PERSON"
      - "ORG"
      - "LOC"
      - "PRODUCT"
      - "EVENT"
      - "CONCEPT"
  
  traversal:
    max_hops: 2
    max_nodes_per_query: 20
    use_pagerank: true
    use_community_detection: true
  
  visualization:
    max_display_nodes: 100
    layout: "force-directed"
    export_format: "html"

# Document Processing
chunking:
  strategy: "smart"  # Options: smart, semantic, sentence, paragraph, sliding
  
  parameters:
    chunk_size: 512
    chunk_overlap: 128
    min_chunk_size: 100
    max_chunk_size: 1000
  
  semantic_chunking:
    similarity_threshold: 0.5
    use_topic_segmentation: true
    use_sentence_boundaries: true
  
  document_types:
    pdf:
      enabled: true
      ocr_enabled: false
    docx:
      enabled: true
    markdown:
      enabled: true
      preserve_structure: true
    code:
      enabled: true
      languages: ["python", "javascript", "java"]

# Context Management
context:
  compression:
    enabled: true
    method: "adaptive"  # Options: adaptive, query_focused, extractive, abstractive
    max_tokens: 2000
    min_compression_ratio: 0.3
  
  memory:
    enabled: true
    max_turns: 20
    max_sessions: 100
    
    episodic:
      capacity: 100
      decay_rate: 0.95
    
    semantic:
      max_facts: 1000
      max_entities: 500
      consolidation_interval: 10  # turns

# A/B Testing
ab_testing:
  enabled: false
  
  default_allocation:
    strategy: "random"  # Options: random, deterministic, weighted, adaptive
  
  metrics:
    - name: "response_quality"
      type: "continuous"
      higher_is_better: true
    - name: "latency"
      type: "continuous"
      higher_is_better: false
    - name: "user_satisfaction"
      type: "binary"
      higher_is_better: true
  
  significance:
    level: 0.05
    minimum_sample_size: 100
    confidence_interval: 0.95

# Monitoring & Observability
monitoring:
  enabled: true
  
  prometheus:
    enabled: true
    port: 8001
    scrape_interval: 15
  
  metrics:
    request_tracking: true
    error_tracking: true
    resource_monitoring: true
    custom_metrics: true
  
  health_checks:
    enabled: true
    interval_seconds: 30
    timeout_seconds: 5
  
  alerting:
    enabled: true
    
    thresholds:
      error_rate_per_minute: 5
      p95_latency_ms: 5000
      cpu_usage_percent: 90
      memory_usage_percent: 90
    
    channels:
      - type: "log"
        level: "ERROR"
      # - type: "slack"
      #   webhook_url: "${SLACK_WEBHOOK_URL}"
      # - type: "email"
      #   recipients: ["team@example.com"]

# Evaluation
evaluation:
  ragas:
    enabled: true
    auto_evaluate: false  # Evaluate every N queries
    evaluation_interval: 10
    
    metrics:
      - "faithfulness"
      - "answer_relevancy"
      - "context_relevancy"
      - "context_precision"
    
    thresholds:
      faithfulness: 0.7
      answer_relevancy: 0.7
      context_relevancy: 0.6
      context_precision: 0.6

# Storage & Persistence
storage:
  base_path: "./rag_storage"
  
  paths:
    index: "${storage.base_path}/index"
    knowledge_graph: "${storage.base_path}/knowledge_graph"
    memory: "${storage.base_path}/memory"
    monitoring: "${storage.base_path}/monitoring"
    experiments: "${storage.base_path}/experiments"
    cache: "${storage.base_path}/cache"
  
  backup:
    enabled: true
    interval_hours: 24
    retention_days: 7

# Performance Tuning
performance:
  batch_processing:
    enabled: true
    batch_size: 32
    timeout_seconds: 30
  
  parallel_processing:
    enabled: true
    max_workers: 4
  
  gpu:
    enabled: false
    device_id: 0
    memory_fraction: 0.8
  
  optimization:
    use_quantization: false
    use_onnx: false
    compile_models: false

# Security
security:
  input_validation:
    enabled: true
    max_query_length: 1000
    block_malicious_patterns: true
  
  rate_limiting:
    enabled: true
    requests_per_minute: 60
    requests_per_hour: 1000
  
  authentication:
    enabled: false
    # method: "jwt"
    # secret_key: "${JWT_SECRET}"
  
  data_privacy:
    anonymize_logs: false
    encrypt_storage: false
    pii_detection: false

# API Configuration
api:
  host: "0.0.0.0"
  port: 8090
  
  cors:
    enabled: true
    origins: ["*"]
    methods: ["GET", "POST", "PUT", "DELETE"]
  
  endpoints:
    - path: "/api/query"
      method: "POST"
      rate_limit: 100
    - path: "/api/index"
      method: "POST"
      rate_limit: 10
    - path: "/api/health"
      method: "GET"
      rate_limit: 1000
  
  documentation:
    enabled: true
    path: "/api/docs"
    swagger_ui: true

# Feature Flags
features:
  streaming_responses: true
  multi_language_support: false
  voice_input: false
  export_conversations: true
  collaborative_filtering: false
  active_learning: false
  federated_search: false

# Development Settings
development:
  debug_mode: false
  verbose_logging: false
  mock_llm: false
  save_intermediate_results: false
  profiling:
    enabled: false
    output_path: "./profiling"