apiVersion: v1
kind: Secret
metadata:
  name: rag-secrets
  namespace: rag-system
  labels:
    app.kubernetes.io/name: rag-system
    app.kubernetes.io/component: secret
type: Opaque
data:
  # Base64 encoded secrets - replace with actual values
  # Use: echo -n "your-secret" | base64
  
  # API Keys (replace with actual base64 encoded values)
  OPENAI_API_KEY: ""  # echo -n "sk-your-openai-key" | base64
  ANTHROPIC_API_KEY: ""  # echo -n "your-anthropic-key" | base64
  
  # Database credentials
  DATABASE_URL: ""  # echo -n "postgresql://user:pass@host:port/db" | base64
  
  # JWT Secret
  JWT_SECRET: ""  # echo -n "your-jwt-secret-key" | base64
  
  # Encryption key
  ENCRYPTION_KEY: ""  # echo -n "your-32-char-encryption-key" | base64
  
  # Monitoring credentials
  PROMETHEUS_USERNAME: ""  # echo -n "prometheus" | base64
  PROMETHEUS_PASSWORD: ""  # echo -n "secure-password" | base64
  
  # External service credentials
  SLACK_WEBHOOK_URL: ""  # echo -n "https://hooks.slack.com/..." | base64
  EMAIL_PASSWORD: ""  # echo -n "app-specific-password" | base64

---
# Service Account for the RAG application
apiVersion: v1
kind: ServiceAccount
metadata:
  name: rag-service-account
  namespace: rag-system
  labels:
    app.kubernetes.io/name: rag-system
    app.kubernetes.io/component: serviceaccount
automountServiceAccountToken: true

---
# Role for the RAG application
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  namespace: rag-system
  name: rag-role
  labels:
    app.kubernetes.io/name: rag-system
    app.kubernetes.io/component: rbac
rules:
- apiGroups: [""]
  resources: ["pods", "services", "endpoints"]
  verbs: ["get", "list", "watch"]
- apiGroups: ["apps"]
  resources: ["deployments", "replicasets"]
  verbs: ["get", "list", "watch"]

---
# Role binding
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: rag-role-binding
  namespace: rag-system
  labels:
    app.kubernetes.io/name: rag-system
    app.kubernetes.io/component: rbac
subjects:
- kind: ServiceAccount
  name: rag-service-account
  namespace: rag-system
roleRef:
  kind: Role
  name: rag-role
  apiGroup: rbac.authorization.k8s.io