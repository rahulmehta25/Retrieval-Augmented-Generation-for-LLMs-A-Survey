[tool:pytest]
# pytest configuration for RAG system tests

# Test discovery
testpaths = tests
python_files = test_*.py *_test.py
python_classes = Test*
python_functions = test_*

# Output and reporting
addopts = 
    --verbose
    --tb=short
    --strict-markers
    --strict-config
    --disable-warnings
    --cov=src
    --cov-report=html:htmlcov
    --cov-report=term-missing
    --cov-report=xml
    --cov-fail-under=80
    --junitxml=test-results.xml

# Markers for test categorization
markers =
    unit: Unit tests (fast, isolated)
    integration: Integration tests (slower, may require external resources)
    slow: Slow tests that take more than 1 second
    performance: Performance and load tests
    requires_gpu: Tests that require GPU acceleration
    requires_internet: Tests that require internet connection
    requires_models: Tests that require downloading ML models
    memory_intensive: Tests that use significant memory
    flaky: Tests that may be unstable
    smoke: Basic smoke tests for CI/CD

# Test execution
minversion = 7.0
timeout = 300
timeout_method = thread

# Filtering
filterwarnings =
    ignore::UserWarning
    ignore::DeprecationWarning
    ignore::PendingDeprecationWarning
    ignore:.*PROTOCOL_TLS.*:DeprecationWarning
    ignore:.*unclosed.*:ResourceWarning

# Coverage settings
[coverage:run]
source = src
omit = 
    */tests/*
    */test_*
    */__pycache__/*
    */venv/*
    */env/*
    */.venv/*
    setup.py
    conftest.py

[coverage:report]
exclude_lines =
    pragma: no cover
    def __repr__
    if self.debug:
    if settings.DEBUG
    raise AssertionError
    raise NotImplementedError
    if 0:
    if __name__ == .__main__.:
    class .*\bProtocol\):
    @(abc\.)?abstractmethod

precision = 2
show_missing = True
skip_covered = False

[coverage:html]
directory = htmlcov

[coverage:xml]
output = coverage.xml